{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca95c023.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./MatchDetailCard.scss\";\r\n\r\nexport const MatchDetailCard = ({teamName, match}) => {\r\n  if(!match) return null;\r\n  const otherTeam = match.team1 === teamName ?  match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n  return (\r\n    <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n        <div>\r\n        <span className=\"vs\">vs</span>\r\n        <h2><Link to={otherTeamRoute}>{otherTeam}</Link></h2>\r\n        <h3 className=\"match-date\">{match.date}</h3>\r\n        <h4 className=\"match-venue\">{match.venue}</h4>\r\n        <h4 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h4>\r\n        </div>\r\n        <div className=\"additional-detail\">\r\n        <h4>First Innings</h4>\r\n        <p>{match.team1}</p>\r\n        <h4>Second Innings</h4>\r\n        <p>{match.team2}</p>\r\n        <h4>Man of the match</h4>\r\n        <p>{match.playerOfMatch}</p>\r\n        <h4>Umpires</h4>\r\n        <p>{match.umpire1}, {match.umpire2}</p>\r\n        </div>\r\n        \r\n    </div>\r\n  );\r\n}","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MatchSmallCard.scss';\r\n\r\nexport const MatchSmallCard = ({teamName,  match}) => {\r\n  if(!match) return null;\r\n  const otherTeam = match.team1 === teamName ?  match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n  return (\r\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n        <div className=\"vs\">vs</div>\r\n        <h3><Link to={otherTeamRoute}>{otherTeam}</Link></h3>\r\n        <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n    </div>\r\n  );\r\n} ","import { React, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\n\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport './TeamPage.scss';\r\n\r\nexport const TeamPage = () => {\r\n\r\n    // team state intitialises with an empty array '[]'\r\n    const [ team, setTeam ] = useState({matches: []});\r\n    const { teamName } = useParams();\r\n\r\n    useEffect(\r\n        () => {\r\n            const fetchTeam = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n                const data = await response.json();\r\n                setTeam(data);\r\n                 \r\n            };\r\n            fetchTeam();\r\n           \r\n        },\r\n        // added dependency  \r\n        [teamName] // empty [] -> call useEffect only on first component load\r\n    );\r\n\r\n  if(!team || !team.teamName){\r\n      return <h2>Team not found</h2>\r\n  }\r\n\r\n  return (\r\n    <div className=\"TeamPage\">\r\n        <div className=\"team-name-section\"><h1 className=\"team-name\">{ team.teamName }</h1></div> \r\n        <div className=\"win-loss-section\">Wins / Losses\r\n        <PieChart\r\n            data={[\r\n            { title: 'Losses', value: team.totalMatches - team.totalWins, color: 'crimson' },\r\n            { title: 'Wins', value: team.totalWins, color: 'rgb(197, 89, 197)' }          \r\n            ]}\r\n            />\r\n        </div>\r\n        <div className=\"match-detail-section\">\r\n            <h3>Latest matches</h3>    \r\n            <MatchDetailCard teamName={team.teamName} match={team.matches[0]}/>\r\n        </div>\r\n        {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName}  match={match}/>)}\r\n        <div className=\"more-link\">\r\n            <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More {'>'} </Link>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for(let i = startYear; i <= endYear; i++){\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n        { years.map(year => (\r\n        <li key={year}>\r\n            <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n        </li>\r\n        )) \r\n        }           \r\n        </ol>\r\n\r\n    )\r\n\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { YearSelector } from '../components/YearSelector';\r\n\r\nimport './MatchPage.scss';\r\n\r\nexport const MatchPage = () => {\r\n\r\n  const [matches, setMatches] = useState([]);\r\n  const {teamName, year } = useParams();\r\n  \r\n  useEffect(\r\n    () => {\r\n        const fetchMatches = async () => {\r\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n            const data = await response.json();\r\n            setMatches(data);\r\n             \r\n        };\r\n        fetchMatches();\r\n       \r\n    },\r\n    // added dependency  \r\n    [teamName, year] // empty [] -> call useEffect only on first component load\r\n);\r\n\r\n  return (\r\n    <div className=\"MatchPage\">\r\n          <div className=\"year-selector\">\r\n            <h3>Select year</h3>\r\n            <YearSelector teamName={teamName} />\r\n          </div>\r\n          <div>\r\n          <h1 className=\"match-heading\">{teamName} in {year}</h1>\r\n            \r\n            {\r\n             matches.map(match => <MatchDetailCard key={match.id} teamName={teamName}  match={match}/>)\r\n            }\r\n            \r\n           </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport './TeamTile.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                <Link to={`/teams/${teamName}`}>\r\n                    {teamName}\r\n                </Link>\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n","import { React, useEffect, useState } from 'react';\r\nimport './HomePage.scss';\r\nimport { TeamTile } from '../components/TeamTile';\r\n\r\nexport const HomePage = () => {\r\n\r\n    // team state intitialises with an empty array '[]'\r\n    const [ teams, setTeams ] = useState([]);\r\n    \r\n\r\n    useEffect(\r\n        () => {\r\n            const fetchAllTeams = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\r\n                const data = await response.json();\r\n                setTeams(data);\r\n                 \r\n            };\r\n            fetchAllTeams();\r\n           \r\n        },\r\n        // added dependency  \r\n        [] // empty [] -> call useEffect only on first component load\r\n    );\r\n\r\n\r\n  return (\r\n    <div className=\"HomePage\">\r\n        <div className=\"header-section\"><h1 className=\"app-name\">IPL Dashboard</h1></div> \r\n        <div className=\"team-grid\">\r\n            { teams.map(team => <TeamTile key={team.id} teamName={team.teamName}/>)}\r\n        </div>\r\n    </div>\r\n        \r\n  );\r\n}\r\n\r\n","import './App.scss';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport { TeamPage } from './pages/TeamPage';\r\nimport { MatchPage } from './pages/MatchPage';\r\nimport { HomePage } from './pages/HomePage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <Router>\r\n        <Switch>\r\n        <Route path=\"/teams/:teamName/matches/:year\">\r\n          <MatchPage />\r\n        </Route>  \r\n        <Route path=\"/teams/:teamName\">\r\n          <TeamPage />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <HomePage />\r\n        </Route>       \r\n        </Switch>   \r\n      </Router>       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}